<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" title="Custom Menu" viewActivate="view1_viewActivateHandler(event)">
	
	<!-- NOT SUPPORTED on IOS -->
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import spark.events.IndexChangeEvent;
			import spark.events.ViewNavigatorEvent;
			
			[Bindable]
			protected var ac:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			[Embed("assets/launchpad_calendar.png")]
			protected var calIcon:Class;
			
			[Bindable]
			[Embed("assets/launchpad_account.png")]
			protected var accountIcon:Class;
			
			[Bindable]
			[Embed("assets/launchpad_add.png")]
			protected var addIcon:Class;
			
			[Bindable]
			[Embed("assets/launchpad_activity.png")]
			protected var updateIcon:Class;
			
			protected var isMenuShowing:Boolean;
			
			
			protected function view1_viewActivateHandler(event:ViewNavigatorEvent):void
			{
				currentState = 'default';
				ac.addItem({label:"Calendar", icon:calIcon});
				ac.addItem({label:"List", icon:accountIcon});
				ac.addItem({label:"Add", icon:addIcon});
				ac.addItem({label:"Update", icon:updateIcon});
				
				stage.addEventListener(KeyboardEvent.KEY_DOWN, onKeyDown);
				stage.addEventListener(MouseEvent.MOUSE_DOWN,onMouseDown);
			}
			
			protected function onKeyDown(event:KeyboardEvent):void {
				if (event.keyCode == Keyboard.MENU) {
					event.preventDefault();
					if (this.currentState=='default')
						currentState = 'menu';
					else currentState = 'default';
				}
			}
			
			protected function onChange(event:IndexChangeEvent):void
			{
				lbl.text = list.selectedItem.label + " selected";
			}

			protected function onMouseDown(event:MouseEvent):void
			{
				if (currentState == 'menu')
					// Set to default (no menu) if they click outside of the menu
					if (event.target == 'mouseCatcher')
						currentState='default';
			}
			
			protected function menuPnl_keyDownHandler(event:KeyboardEvent):void
			{
				if (event.keyCode == Keyboard.DOWN)
					list.selectedIndex = list.selectedIndex+1;
				else if (event.keyCode == Keyboard.UP)
					list.selectedIndex = list.selectedIndex-1;
			}

			protected function menuPnl_creationCompleteHandler(event:FlexEvent):void
			{
				menuPnl.addEventListener(KeyboardEvent.KEY_DOWN,menuPnl_keyDownHandler);
			}
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="default"/>
		<s:State name="menu"/>
	</s:states>
	
	<s:layout>
		<s:VerticalLayout gap="40" horizontalAlign="center" paddingBottom="5" paddingLeft="5"
						  paddingRight="5" verticalAlign="top" paddingTop="10"/>
	</s:layout>
	
	 <s:TextArea id="ta" width="95%" editable="false"
		  	text="Press the device menu key to trigger a custom popup menu to be displayed in the area below."/>
 
	<s:Panel id="menuPnl" includeIn="menu" width="85%" height="277" creationComplete="menuPnl_creationCompleteHandler(event)"  
		  	skinClass="views.ContextMenuPanelSkin">
	 	<s:List id="list" left="0" right="0" top="0" bottom="0" width="100%" height="100%"
			 	borderVisible="false" change="onChange(event)" color="#3636AC"
			 	contentBackgroundAlpha="1.0" contentBackgroundColor="#E7E7E7" dataProvider="{ac}"
			 	fontSize="22">
		 	<s:itemRenderer>
			 	<fx:Component>
				 	<s:IconItemRenderer iconField="icon" height="60" mouseOver="this.alpha=1.0" mouseOut="this.alpha=.7" alpha=".7"/>
			 	</fx:Component>
		 	</s:itemRenderer>
	 	</s:List>
 	</s:Panel>
 	<s:Label id="lbl" includeIn="menu"/>           

</s:View>
